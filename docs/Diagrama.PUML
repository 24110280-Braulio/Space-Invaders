@startuml SpaceInvaders

' Clases principales
class Game {
    - tabletop: Tabletop
    - pacFight: PacFight
    - playerHealth: PlayerHealth
    - enemyManager: EnemyManager
    - enemyMovementManager: EnemyMovementManager
    - enemyHealthManager: EnemyHealthManager
    - enemyShooter: EnemyShooter
    - barrier: Barrier
    - boss: Boss
    + EjecutarPrincipal()
}

class Tabletop {
    - enemyManager: EnemyManager
    - enemyMovementManager: EnemyMovementManager
    - enemyHealthManager: EnemyHealthManager
    - enemyShooter: EnemyShooter
    - barrier: Barrier
    - boss: Boss
    - playerHealth: PlayerHealth
    + Inicializar()
    + Renderizar()
    + Actualizar()
    + AgregarEntidad(Enemy)
    + RemoverEntidad(Enemy)
    + VerificarColisiones()
    + ObtenerEntidades()
    + ProcesarEntrada(entrada)
}

class PacFight {
    - enemyManager: EnemyManager
    - playerHealth: PlayerHealth
    + Inicializar()
    + Actualizar()
    + ProcesarEntrada(entrada)
    + VerificarColisiones()
}

class EnemyManager {
    + GenerarEnemigo()
    + AnimarEnemigo()
}

class EnemyMovementManager {
    - velocidadMovimiento: float
    - ubicacionesEnemigos: vector<Vector2f>
    + ControlarMovimientoEnLinea()
    + ControlarMovimientoEnZigZag()
    + ControlarMovimientoDescendente()
}

class EnemyHealthManager {
    - puntosDeVida: int
    + EliminarSpriteSiSinVida()
}

class EnemyShooter {
    + Disparar()
    + DibujarBalas()
    + ControlarVelocidadBalas()
    - eshoot1: "Eshoot(1).png"
    - eshoot2: "Eshoot(2).png"
    - eshoot3: "Eshoot(3).png"
    - eshoot4: "Eshoot(4).png"
}

class Barrier {
    - barrierSprite: "Barrera.png"
    - lowBarrierSprite: "Lowbarrier.png"
    - puntosDeVida: int
    + CambiarSpriteSi20HP()
    + GenerarBarrierInicial()
}

class Boss {
    - laser1: "Laser1.png"
    - laser2: "Laser2.png"
    - vidaJefe1: "VidaJefe1.png"
    - vidaJefe2: "VidaJefe2.png"
    - vidaJefe3: "VidaJefe3.png"
    - vidaJefe4: "VidaJefe4.png"
    - vidaJefe5: "VidaJefe5.png"
    - vidaJefe6: "VidaJefe6.png"
    - boss1_A: "Boss1_A.png"
    - boss1_B: "Boss1_B.png"
    + GenerarSprite()
    + Atacar()
    - tiempoCooldown: float
}

class PlayerHealth {
    - hpp: int
    - sprite0HP: "0 HP.png"
    - sprite20HP: "20 HP.png"
    - sprite40HP: "40 HP.png"
    - sprite60HP: "60 HP.png"
    - sprite80HP: "80 HP.png"
    - sprite100HP: "100 HP.png"
    + ActivarInvencibilidad()
    + ActualizarSpritePorDaÃ±o()
}

class EnemySprite {
    - peaSpriteA: "PEA.png"
    - peaSpriteB: "PEB.png"
    - peaSpriteC: "PEC.png"
}

' Relaciones
Game --> Tabletop
Game --> PacFight
Game --> PlayerHealth
Game --> EnemyManager
Game --> EnemyMovementManager
Game --> EnemyHealthManager
Game --> EnemyShooter
Game --> Barrier
Game --> Boss

Tabletop --> EnemyManager
Tabletop --> EnemyMovementManager
Tabletop --> EnemyHealthManager
Tabletop --> EnemyShooter
Tabletop --> Barrier
Tabletop --> Boss
Tabletop --> PlayerHealth

PacFight --> EnemyManager
PacFight --> PlayerHealth

Player "1" *-- "1" PlayerHealth : utiliza
EnemyManager "1" *-- "*" EnemySprite : controla
Boss "1" *-- "1" BossSprite : utiliza
Barrier "1" *-- "1" BarrierSprite : utiliza
EnemyShooter "1" *-- "1" BulletSprite : utiliza

@enduml